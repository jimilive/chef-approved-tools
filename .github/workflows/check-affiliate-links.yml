name: Check Amazon Affiliate Links

# Run daily at 6 AM Pacific (2 PM UTC / 14:00 UTC)
on:
  schedule:
    - cron: '0 14 * * *'
  # Allow manual trigger
  workflow_dispatch:

jobs:
  check-links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Extract Amazon Links from Supabase
        id: extract
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          # Create a script to fetch affiliate links from Supabase
          cat > /tmp/fetch-links.mjs << 'SCRIPT'
          import { createClient } from '@supabase/supabase-js'
          import { writeFileSync } from 'fs'

          const supabase = createClient(
            process.env.NEXT_PUBLIC_SUPABASE_URL,
            process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
          )

          const { data, error } = await supabase
            .from('products')
            .select('slug, name, affiliate_links')

          if (error) {
            console.error('Error fetching products:', error)
            process.exit(1)
          }

          // Extract all Amazon affiliate links
          const amazonLinks = new Set()
          data.forEach(product => {
            if (product.affiliate_links) {
              product.affiliate_links.forEach(link => {
                if (link.merchant === 'amazon' && link.url) {
                  amazonLinks.add(link.url)
                }
              })
            }
          })

          // Write links to file
          writeFileSync('/tmp/links.txt', Array.from(amazonLinks).join('\n'))
          console.log(`Found ${amazonLinks.size} unique Amazon affiliate links from ${data.length} products`)
          SCRIPT

          # Run the script
          node /tmp/fetch-links.mjs

          # Set the current date/time as an output
          echo "check_date=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Test Links with Browser Headers
        id: test
        run: |
          set +e
          broken_links=""
          working_count=0
          broken_count=0

          while IFS= read -r link; do
            # Test with proper browser headers to avoid bot detection
            status=$(curl -s -o /dev/null -w "%{http_code}" -L "$link" \
              -H "User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" \
              -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" \
              -H "Accept-Language: en-US,en;q=0.9" \
              --max-time 15)

            if [ "$status" -eq 200 ] || [ "$status" -ge 300 ] && [ "$status" -lt 400 ]; then
              echo "‚úÖ $link - HTTP $status"
              ((working_count++))
            else
              echo "‚ùå $link - HTTP $status - BROKEN"
              broken_links="$broken_links\n- $link (HTTP $status)"
              ((broken_count++))
            fi

            # Rate limit: wait 1 second between checks
            sleep 1
          done < /tmp/links.txt

          total_count=$((working_count + broken_count))
          echo "working_count=$working_count" >> $GITHUB_OUTPUT
          echo "broken_count=$broken_count" >> $GITHUB_OUTPUT
          echo "total_count=$total_count" >> $GITHUB_OUTPUT
          echo "broken_links<<EOF" >> $GITHUB_OUTPUT
          echo -e "$broken_links" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Email if Links are Broken
        if: steps.test.outputs.broken_count != '0'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: 'üö® Chef Approved Tools - ${{ steps.test.outputs.broken_count }} Broken Affiliate Link(s) Detected'
          to: scottdbradley@gmail.com
          from: Chef Approved Tools <${{ secrets.GMAIL_USERNAME }}>
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
              <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background-color: #dc2626; color: white; padding: 20px; border-radius: 5px; margin-bottom: 20px; }
                .header h1 { margin: 0; font-size: 24px; }
                .stats { background-color: #f3f4f6; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
                .broken-links { background-color: #fef2f2; border-left: 4px solid #dc2626; padding: 15px; margin-bottom: 20px; }
                .action-items { background-color: #eff6ff; border-left: 4px solid #2563eb; padding: 15px; margin-bottom: 20px; }
                .action-items ol { margin: 10px 0; padding-left: 20px; }
                .footer { color: #6b7280; font-size: 14px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e5e7eb; }
                code { background-color: #f3f4f6; padding: 2px 6px; border-radius: 3px; font-family: monospace; }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>üö® Broken Amazon Affiliate Links Detected</h1>
              </div>

              <div class="stats">
                <strong>Status:</strong> ${{ steps.test.outputs.broken_count }} broken link(s) found out of ${{ steps.test.outputs.total_count }} total<br>
                <strong>Site:</strong> www.chefapprovedtools.com<br>
                <strong>Affiliate Tag:</strong> chefapprovedt-20<br>
                <strong>Check Date:</strong> ${{ steps.extract.outputs.check_date }}
              </div>

              <div class="broken-links">
                <h2 style="margin-top: 0; color: #dc2626;">Broken Links:</h2>
                <pre style="white-space: pre-wrap; word-wrap: break-word;">${{ steps.test.outputs.broken_links }}</pre>
              </div>

              <div class="action-items">
                <h2 style="margin-top: 0; color: #2563eb;">Action Required:</h2>
                <ol>
                  <li>Log into Amazon Associates at <a href="https://affiliate-program.amazon.com">https://affiliate-program.amazon.com</a></li>
                  <li>Verify these products still exist and are available</li>
                  <li>Generate fresh affiliate links if needed using tag: <code>chefapprovedt-20</code></li>
                  <li>Update the affected review pages in the repository</li>
                  <li>Test the updated links manually before committing</li>
                </ol>
              </div>

              <div class="footer">
                <p><strong>Automated Check Details:</strong></p>
                <ul style="margin: 5px 0; padding-left: 20px;">
                  <li>This check runs daily at 6 AM Pacific (2 PM UTC)</li>
                  <li>Fetches all affiliate links from Supabase products database</li>
                  <li>Uses proper browser headers to avoid Amazon's bot detection</li>
                  <li>Tests both HTTP status codes and redirect behavior</li>
                </ul>
                <p style="margin-top: 15px;"><em>This email was sent automatically by the Chef Approved Tools affiliate link checker workflow.</em></p>
              </div>
            </body>
            </html>

      - name: Send Success Email
        if: steps.test.outputs.broken_count == '0'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: '‚úÖ Chef Approved Tools - All Affiliate Links Working'
          to: scottdbradley@gmail.com
          from: Chef Approved Tools <${{ secrets.GMAIL_USERNAME }}>
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
              <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background-color: #059669; color: white; padding: 20px; border-radius: 5px; margin-bottom: 20px; }
                .header h1 { margin: 0; font-size: 24px; }
                .stats { background-color: #f0fdf4; border-left: 4px solid #059669; padding: 15px; margin-bottom: 20px; }
                .footer { color: #6b7280; font-size: 14px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e5e7eb; }
              </style>
            </head>
            <body>
              <div class="header">
                <h1>‚úÖ All Affiliate Links Working</h1>
              </div>

              <div class="stats">
                <strong>Status:</strong> All ${{ steps.test.outputs.working_count }} affiliate links are working correctly<br>
                <strong>Site:</strong> www.chefapprovedtools.com<br>
                <strong>Affiliate Tag:</strong> chefapprovedt-20<br>
                <strong>Check Date:</strong> ${{ steps.extract.outputs.check_date }}
              </div>

              <p>Great news! All Amazon affiliate links on your site are working properly and directing to the correct products with your affiliate tag.</p>

              <div class="footer">
                <p><em>This email was sent automatically by the Chef Approved Tools affiliate link checker workflow running daily at 6 AM Pacific.</em></p>
              </div>
            </body>
            </html>

      - name: Summary
        run: |
          echo "## Affiliate Link Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Working: ${{ steps.test.outputs.working_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- ‚ùå Broken: ${{ steps.test.outputs.broken_count }}" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.test.outputs.broken_count }}" -gt 0 ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Broken Links:" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.test.outputs.broken_links }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "üìß An email notification has been sent to scottdbradley@gmail.com" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚úÖ All affiliate links are working correctly!" >> $GITHUB_STEP_SUMMARY
            echo "üìß Success notification sent to scottdbradley@gmail.com" >> $GITHUB_STEP_SUMMARY
          fi
